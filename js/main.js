'use strict';
/*
 *  –ú–∞—Å—Å–∏–≤—ã: –ª–∏—Ç–µ—Ä–∞–ª –º–∞—Å—Å–∏–≤–∞, —ç–ª–µ–º–µ–Ω—Ç—ã, –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è, –¥–ª–∏–Ω–∞
 */

// const array = [1, 2, 3, 4, 5, 404, 32302, 31];

// const string = '–≤—ñ—Ñ–≤—Ñ—ñ';

// console.log(array[0]);

// array[0] = 44920429;

// array[8] = 42424;

// console.log(string[0]);

// string[1] = '–∞';

// console.log(array);

// console.log(array.length);

// console.log(typeof array);

/*
 * –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —Ä—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ –ø—Ä–∏–º—ñ—Ç–∏–≤–∞–º–∏ —Ç–∞ –æ–±'—î–∫—Ç–æ–º
 */

// const arr1 = [1, 2, 3];

// const arr2 = arr1;

// console.log(arr1);
// console.log(arr2);

// arr2[2] = 5;

// console.log(arr1);
// console.log(arr2);

// let string1 = 'Welcome';

// let string2 = string1;

// console.log(string1);
// console.log(string2);

// string2 = 'To the future';

// console.log(string1);
// console.log(string2);

/*
? –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é a = 10.
? –°–æ–∑–¥–∞–π—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b -> –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é a
? –í—ã–≤–∏–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–µ —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
? –ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a –∏ –µ—â—ë —Ä–∞–∑ –≤—ã–≤–µ–¥–µ—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å
*/

// let a = 10;

// let b = a;

// console.log(a);
// console.log(b);

// a = 50;

// console.log(a);
// console.log(b);

/*
? –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ arr1 = [1, 2, 3].
? –°–æ–∑–¥–∞–π—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –º–∞—Å—Å–∏–≤—É arr2 -> –º–∞—Å—Å–∏–≤ arr1
? –í—ã–≤–µ –¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–∞ —ç—Ç–∏ –º–∞—Å—Å–∏–≤–∞
? –î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤ arr1 –∏ –µ—â—ë —Ä–∞–∑ –≤—ã–≤–µ–¥–µ—Ç–µ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
*/

// const arr1 = [1, 2, 3];

// const arr2 = arr1;

// console.log(arr1);
// console.log(arr2);

// arr1[3] = 50;

// console.log(arr1);
// console.log(arr2);

/*
 * –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ —Ü–∏–∫–ª–∞–º–∏ for –∏ for...of
 */

// const array = [11, true, false, [], 'qeqweqw'];

// for (let index = 0; index < array.length; index += 1) {

//   console.log(array[index]);
// }

// for (let element of array) {
//   console.log(element);
// }

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for.
? –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞.
? –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
*/

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let index = 0; index < fruits.length; index += 1) {
//   console.log(`${index + 1}: ${fruits[index]}`);
// }

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
? –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª.
? –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª for –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–ø–µ—Ä—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç) —ñ for of (–¥—Ä—É–≥–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç).
*/

// const numbers = [-100, -5, -7];

// debugger;

// let minNumber = numbers[0];

// 1 variant
// for (let index = 1; index < numbers.length; index += 1) {
//   if (numbers[index] < minNumber) {
//     minNumber = numbers[index];
//   }
// }

// 2 variant
// for (let index = 1; index < numbers.length; index += 1) {
//   if (numbers[index] > minNumber) {
//     continue;
//   }

//   minNumber = numbers[index];
// }

// console.log(minNumber);

// 3 variant

// const array = [1, 2, -33, 3, -50];

// // debugger;

// let minNumber = array[0];

// for (let element of array) {
//   if (element < minNumber) {
//     minNumber = element;
//   }
// }

// console.log(minNumber);

/*
? –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç.
? –ü–æ–∫–∞–∂–∏ —Ä—ñ—à–µ–Ω–Ω—è –¥–≤–æ–º–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ (–∑ —Ü–∏–∫–ª–æ–º for —Ç–∞ for of)
*/

// const salaries = [200, 450, 600, 150, 300];

// let total = 0;

// for (let index = 0; index < salaries.length; index += 1) {
//   total += salaries[index];
// }

// for (let salary of salaries) {
//   total += salary;
// }

// console.log(total);

/*
 * –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã: split –∏ join, indexOf –∏ includes, push, pop, shift, unshift, slice –∏ splice, concat
 */

// const string = 'Welcome to the future!';

// const stringArray = string.split(' ');

// console.log(stringArray);

// const stringFromArray = stringArray.join(' ');

// console.log(stringFromArray);

// const array = [1, 2, 3, 4, 5, 99, 5];

// console.log(array.indexOf(5));

// console.log(array.includes(99));

// array.push(true, false, []);

// console.log(array);

// const element = array.pop();

// console.log(element);

// console.log(array);

// array.unshift(0, 1, 5);

// const element = array.shift();

// console.log(element);

// console.log(array);

// const newArray = array.slice();

// console.log(newArray);

// console.log(array === newArray);

// const newArray = array.concat([1, 2, 3]);

// console.log(newArray);

// console.log(array);

// ? –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// ? –î–æ–±–∞–≤—å—Ç–µ ¬´Rock&Roll¬ª –≤ –∫–æ–Ω–µ—Ü.
// ? –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// ? –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// ? –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// ? –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
//  */

// const genres = ['Jazz', 'Blues'];

// genres.push('Rock&Roll');

// console.log(genres);

// console.log(genres[0]);

// console.log(genres[genres.length - 1]);

// console.log(genres.shift());

// console.log(genres.pop());

// genres.unshift('Country', 'Reggy');

// console.log(genres);

/*
? –£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Å—Å–∏–≤–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤, –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç.
? –ü—Ä–∏–¥—É–º–∞–π –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è —á–µ—Ä–µ–∑ —Ü–∏–∫–ª–∏, —á–µ—Ä–µ–∑ push —Ç–∞ —á–µ—Ä–µ–∑ concat
*/

// const managerSalaries = [100, 150, 250, 400, 500];

// const developersSalaries = [800, 1500, 4000];

// 1 variant
// const allSalaries = managerSalaries.concat(developersSalaries);

// let total = 0;

// for (let salary of allSalaries) {
//   total += salary;
// }

// console.log(total);

// 2 variant

// const allSalaries = managerSalaries.slice();

// for (let salary of developersSalaries) {
//   allSalaries.push(salary);
// }

// let total = 0;

// for (let salary of allSalaries) {
//   total += salary;
// }

// console.log(total);

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
? –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
? –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.
*/

// const values = '8 11';

// const array = values.split(' ');

// const square = array[0] * array[1];

// console.log(square);

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
? –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
? –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.
? –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.
*/

// const names = 'Jacob,William,Solomon,Artemis';

// const phones = '89001234567,89001112233,890055566377,890055566300';

// const namesArray = names.split(',');

// const phonesArray = phones.split(',');

// console.log(namesArray);

// console.log(phonesArray);

// for (let index = 0; index < namesArray.length; index += 1) {
//   // console.log(namesArray[index]);
//   // console.log(phonesArray[index]);

//   console.log(`${namesArray[index]} - ${phonesArray[index]}`);
// }

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤)
? –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
? –ü–æ–∫–∞–∂–∏ —Ç—Ä–∏ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑ push + join, —Ü–∏–∫–ª, –º–µ—Ç–æ–¥ reverse
*/

// const string = 'Welcome';

// 1 variant
// const stringArray = string.split('');

// stringArray.reverse();

// const newString = stringArray.join('');

// console.log(stringArray);

// console.log(newString);

// 2 variant

// let newString = '';

// debugger;

// for (let symbol of string) {
//   newString = symbol + newString;
// }

// console.log(newString);

/*
? –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Ñ–ª—å—Ç—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å
? –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑ indexOf, includes 
*/

// const employees = ['Dennis', 'Shaw', 'Watkins', 'Ray', 'Shaw', 'Watkins'];

// const filteredEmployees = [];

// 1 variant
// for (let index = 0; index < employees.length; index += 1) {
//   const employee = employees[index];

//   if (employees.indexOf(employee) === index) {
//     filteredEmployees.push(employee);
//   }
// }

// debugger;

// for (let index = 0; index < employees.length; index += 1) {
//   const employee = employees[index];

//   if (!filteredEmployees.includes(employee)) {
//     filteredEmployees.push(employee);
//   }
// }

// console.log(filteredEmployees);

// ? –°–æ—Ç—Ä—É–¥–Ω–∏–∫ Shaw —É–≤–æ–ª–∏–ª—Å—è, —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∑ –¥–æ–ø–æ–º–æ–≥–æ—é splice + indexOf

// //? –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Thornton, –ø–µ—Ä–µ–¥ Watkins;

// const employees = ['Dennis', 'Shaw', 'Watkins', 'Ray', 'Shaw', 'Watkins'];

// const shawIndex = employees.indexOf('Shaw');

// employees.splice(shawIndex, 1);

// employees.splice(1, 0, 'Thornton');

// console.log(employees);

// –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –∑ –¥–æ–ø–æ–º–æ–≥–æ—é split —Ç–∞ join

/*
? slug
? –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç title-about-array-methods –∑—ñ —Å—Ç—Ä–æ–∫–∏ 'Title about array methods', –¥–∞–π—Ç–µ —è–∫–æ–º–æ–≥–∞ –±—ñ–ª—å—à–µ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
*/

// const string = 'Title about array methods';

// const slug = string.split(' ').join('-').toLowerCase();

// console.log(slug);

'use strict';
/*
 * –ö–æ–ª–±—ç–∫–∏, —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞
 */

//? –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
// const fetchUser = async function (userUrl, callback) {
//   const response = await fetch(`https://api.github.com/users/${userUrl}`);
//   const result = await response.json();

//   callback(result);
// };

// const showInfoAboutUser = function (user) {
//   console.log(user);
// };

// fetchUser('facebook', showInfoAboutUser);

//? –†–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// const userEmail = document.querySelector('.user-email');

// const logValues = function () {
//   // console.log(e.target.value);
//   console.log('Hi!');
// };

// userEmail.addEventListener('input', logValues);

/*
? –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é each(array, callback), –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ–∂–∏–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤, –∞ –≤—Ç–æ—Ä—ã–º - —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞.
? –§—É–Ω–∫—Ü–∏—è each –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–∞ –∫–æ–ª–ª–±–µ–∫–∞.
*/

// const multi = function (el) {
//   return el * 2;
// };

// const add = function (el) {
//   return el + 2;
// };

// const logElements = function (el) {
//   console.log(el);
// };

// const numbers = [1, 2, 3, 4, 5];

// console.log(each(numbers, multi));
// console.log(each(numbers, add));
// each(numbers, logElements);

/*
? –ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:
? createProduct(product, callback) - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ id, –∞ —Ç–∞–∫–∂–µ –∫–æ–ª–±–µ–∫. 
? –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –æ–±—å–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞, –¥–æ–±–∞–≤–ª—è—è –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ —Å–≤–æ–π—Å—Ç–≤–æ id –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—å–µ–∫—Ç.

? logProduct(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—å–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
? logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—å–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
*/

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);
// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logTotalPrice);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);

/*
? –î–æ–±–∞–≤—å—Ç–µ –æ–±—ä–µ–∫—Ç—É account –º–µ—Ç–æ–¥—ã withdraw(amount, onSuccess, onError) 
? –∏ deposit(amount, onSuccess, onError), –≥–¥–µ –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —ç—Ç–æ —Å—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∞ –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π - –∫–æ–ª–±–µ–∫–∏.

? –ú–µ—Ç–æ–¥ withdraw –≤—ã–∑—ã–≤–∞–µ—Ç:
? onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`) –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT
? onError(`Amount can't exceed account balance of ${this.balance} credits`) –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ this.balance
? –∏–Ω–∞—á–µ —Å–Ω–∏–º–∞–µ–º –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –∏ –≤—ã–∑—ã–≤–∞–µ–º onSuccess(`Account balance: ${this.balance}`)
?
? –ú–µ—Ç–æ–¥ deposit –≤—ã–∑—ã–≤–∞–µ—Ç:
? onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`) –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT
? onError(`Amount must be more than 0 credits`) –µ—Å–ª–∏ amount –º–µ–Ω—å—à–µ –ª–∏–±–æ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
? –∏–Ω–∞—á–µ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∫ –±–∞–ª–∞–Ω—Å—É amount –∏ –≤—ã–∑—ã–≤–∞–µ–º onSuccess(`Account balance: ${this.balance}`)
*/

// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: 'Jacob',
//   balance: 400,
// };

// const handleSuccess = function (message) {
//   console.log(`‚úÖ Success! ${message}`);
// };

// const handleError = function (message) {
//   console.log(`‚ùå Error! ${message}`);
// };

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);

// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);
